.page{
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: space-between;
    height: 100vh;
}

.pageHeader{
    width: 100%;
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding-left: 10px;
    padding-right: 10px;
    height: 40px;
}

.backButton, .settings{
    color: rgb(135, 135, 135);
    transition: all 0.3s ease-in-out;
    background-color: rgb(0, 0, 0);
    padding: 5px;
    border-radius: 5px;
}

.backButton:hover, .settings:hover{
    color: rgb(0, 0, 0);
    background-color: rgb(215, 215, 215);
    cursor: pointer;
}

.pageFooter{
    width: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    padding-left: 10px;
    padding-right: 10px;
    height: 40px;
}

.inputContainer{
    width: 50%;
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding-left: 10px;
    padding-right: 10px;
    height: 40px;
    gap: 10px;
    background-color: #111111;
    border-radius: 10px;
    margin-bottom: 10px;
}

.inputContainer input{
    width: 100%;
    border: none;
    outline: none;
    background-color: transparent;
    color: white;
}

.uploadButton{
    color: rgb(172, 172, 172);
    transition: all 0.3s ease-in-out;
}

.uploadButton:hover{
    color: white;
    cursor: pointer;
}

.sendButton{
    background-color: #b3b3b3;
    transition: all 0.3s ease-in-out;
    border: none;
    color: black;
    padding: 5px;
    border-radius: 5px;
}

.sendButton:hover{
    background-color: #ffffff;
    cursor: pointer;
}

.pageBody{
    width: 50%;
    height: 100vh;
    overflow-y: scroll;
    scrollbar-color: rgb(255, 255, 255) rgb(0, 0, 0);

}

.systemMessage, .userMessage{
    width: 100%;
    padding: 10px;
    border-radius: 5px;
    margin-bottom: 10px;
    color: white;
}

.systemMessage{

}

.userMessage{
    background-color: rgb(27, 27, 27);
}

.ProseMirror {
    @apply p-12 px-8 sm:px-12;
    background-color: red;
  }
  
  .ProseMirror .is-editor-empty:first-child::before {
    content: attr(data-placeholder);
    float: left;
    color: hsl(var(--muted-foreground));
    pointer-events: none;
    height: 0;
  }
  .ProseMirror .is-empty::before {
    content: attr(data-placeholder);
    float: left;
    color: hsl(var(--muted-foreground));
    pointer-events: none;
    height: 0;
  }
  
  /* Custom image styles */
  
  .ProseMirror img {
    transition: filter 0.1s ease-in-out;
  }
  
  .ProseMirror img:hover {
    cursor: pointer;
    filter: brightness(90%);
  }
  
  .ProseMirror img.ProseMirror-selectednode {
    outline: 3px solid #5abbf7;
    filter: brightness(90%);
  }
  
  .img-placeholder {
    position: relative;
  }
  
  .img-placeholder::before {
    content: "";
    box-sizing: border-box;
    position: absolute;
    top: 50%;
    left: 50%;
    width: 36px;
    height: 36px;
    border-radius: 50%;
    border: 3px solid var(--novel-stone-200);
    border-top-color: var(--novel-stone-800);
    animation: spinning 0.6s linear infinite;
  }

  .modalOverlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100vw;
    height: 100vh;
    background: rgba(0, 0, 0, 0.7); /* Dark semi-transparent background */
    display: flex;
    justify-content: center;
    align-items: center;
    z-index: 1000; /* Ensure it appears above other content */
    overflow-y: scroll;
  }
  
  .modal {
    background: #fff;
    padding: 20px;
    border-radius: 8px;
    width: 400px; /* Adjust width as needed */
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
    z-index: 1001;
    color: black;
  }
  
  .modal button {
    background-color: black;
    color: white;
  }

  .closeButton {
    padding: 8px 12px;
    border: none;
    background: #007bff;
    color: #fff;
    border-radius: 4px;
    cursor: pointer;
    transition: background 0.3s;
  }

  .modalContent button {
    width: 150px;
  }

@media screen and (max-width: 1200px) {
    .inputContainer{
        width: 100%;
        display: flex;
        align-items: center;
        justify-content: space-between;
        padding-left: 10px;
        padding-right: 10px;
        height: 40px;
        gap: 10px;
        margin: 0;
        border-radius: 0;
    }

    .pageBody{
        width: 100%;
        padding: 20px;
    }
    

    .pageFooter{

        padding-left: 0px;
        padding-right: 0px;

    }


  }

  .fileInputContainer {
    display: inline-block;
    position: relative;
  }
  
  .customFileUpload {
    display: inline-block;
    color: rgb(208, 208, 208); /* Custom text color */
    cursor: pointer;
    font-size: 16px;
    font-family: Arial, sans-serif;
    transition: color 0.3s ease-in-out;
  }

  .customFileUpload:hover {
    color: white;
  }
  
  .inputContainer input[type="file"] {
    display: none; /* Hide the default file input */
  }
  

  /* From Uiverse.io by JkHuger */ 
@keyframes loader_5191 {
  from {
    opacity: 0;
  }

  to {
    opacity: 1;
  }
}

.loading {

  position: absolute;
  top: 50%;
  left: 50%;
  margin-top: -5px;
  margin-left: -5px;
}

.noMessages{
  position: absolute;
  top: 50%;
  left: 50%;
  margin-left: -135px;
}

.permissionsTable{}

.permissionsTable{
  width: 100%;

}

.permissionsSection{
  max-height: 400px;
  overflow-y: scroll;
  scrollbar-color: #000000 #ffffff;
}

.permissionsTable tbody td{
  text-align: center;
}

.modalContent {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  gap: 10px;
  margin-top: 20px;
  margin-bottom: 20px;
  text-align: center;
}

.modal input {
  background-color: black;
  color: white;
  height: 33px;
  padding: 5px;
  border-radius: 5px;
}

.modalContent button {
  background-color: black;
  color: white;
  border: none;
}

.modalContent button {
  transition: all 300ms;
  border: none;
  padding: 0.5rem 1rem;
  border-radius: 5px;
  cursor: pointer;
  width: 250px;
  transition: all 300ms;
}

.modalContent button:hover {
  scale: 0.95;
}

.modalContent input{
  background-color: black;
  color: white;
  border: none;
  padding-left: 10px;
}

.modalContent ul{
  list-style: none;
}

.deleteButton{
  transition: all 300ms;
}

.modalContent .deleteButton:hover{
  scale: 1.1;
  background-color: rgb(255, 104, 104);
}

.closeButton{
  transition: all 300ms;
}

.closeButton:hover{
  background-color: rgb(57, 186, 255);
}

.agentMenu{
  background-color: #ffffff;
  color: #000000;
  position: absolute;
  bottom: 60px;
  padding-left: 10px;
  padding-right: 10px;
  padding-top: 5px;
  padding-bottom: 5px;
  display: flex;
  gap: 5px;
  flex-wrap: wrap;
  border-radius: 5px;
}

.agentMenuItem{
  transition: all 300ms;
  padding: 5px;
  border-radius: 5px;
  cursor: pointer;
}

.agentMenuItem:hover{
  background-color: #111111;
  color: #ffffff;
}

.agentMentionInstance {
  color: #007bff; /* Or any color/style you prefer */
  font-weight: bold;
  font-size: 100px;
}

.selectedAgentDisplay{
  background-color: #d1e7dd;
  color: #0f5132;
  padding: 2px 4px;
  border-radius: 4px;
  display: inline-block;
  position: absolute;
  bottom: 60px;
};

/* .selectedAgentDisplay {
  margin-bottom: 8px;
  font-weight: bold;
  color: #333;
}

.selectedAgent {
  color: #007bff;
  background-color: #e6f2ff;
  padding: 2px 5px;
  border-radius: 4px;
}

.agentMenu {
  position: absolute;
  background: white;
  border: 1px solid #ddd;
  border-radius: 4px;
  margin-top: 5px;
  z-index: 100;
  max-height: 150px;
  overflow-y: auto;
  width: 200px;
}

.agentMenuItem {
  padding: 8px;
  cursor: pointer;
}

.agentMenuItem:hover {
  background-color: #f0f0f0;
} */
